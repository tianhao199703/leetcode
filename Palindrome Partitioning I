    vector<vector<string>> partition(string s) {
        vector<vector<string>> out,res;
        vector<string> tmp;
        if(judgeP(s)){
            tmp.push_back(s);
            out.push_back(tmp);
        }
        for (int i=1;i<s.size();i++){
            string sfront,sback;
            sfront = s.substr(0,i);
            sback = s.substr(i);
            if(judgeP(sfront)){
                res = partition(sback);
                for(int j=0;j<res.size();j++){
                    res[j].insert(res[j].begin(),sfront);
                    out.push_back(res[j]);
                }
            }
        }
        return out;
    }
    bool judgeP(string s){
        if(s.size()<=1){return true;}
        int i=0,j=s.size()-1;
        while(i<=j){
            if(s[i]!=s[j]){return false;}
            i++;
            j--;
        }
        return true;
    }
